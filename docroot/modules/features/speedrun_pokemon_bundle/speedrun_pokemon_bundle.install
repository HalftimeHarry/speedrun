<?php

/**
 * @file
 * Contains installation and update routines for the Pokemon bundle feature.
 */

use Drupal\Component\Serialization\Json;
use Drupal\file\Entity\File;
use Drupal\node\Entity\Node;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_install().
 */
function speedrun_pokemon_bundle_install() {
  $db = file_get_contents(__DIR__ . '/db.json');
  $db = Json::decode($db);

  $types = array();
  foreach ($db as $pokemon) {
    $types = array_merge($types, $pokemon['type']);
  }
  $types = array_unique($types);
  $types = array_map(
    function ($type) {
      $term = Term::create(['name' => $type, 'vid' => 'type']);
      $term->save();

      return $term;
    },
    array_combine($types, $types)
  );

  foreach ($db as $pokemon) {
    $image = __DIR__ . '/images/' . preg_replace('/[^\w\d\-]+/', NULL, basename($pokemon['image'], '.jpg')) . '.jpg';

    $file = File::create([
      'filename' => $pokemon['image'],
      'uri' => 'public://' . $pokemon['image'],
      'status' => FILE_STATUS_PERMANENT,
    ]);
    if ($file->save()) {
      file_unmanaged_copy($image, $file->getFileUri());
    }

    $node = Node::create([
      'type' => 'pokemon',
      'title' => $pokemon['name'],
      'field_image' => $file,
      'field_abilities' => $pokemon['abilities'],
      'field_growth_rate' => $pokemon['growth_rate'],
      'field_japanese_name' => $pokemon['japanese_name'],
      'field_species' => html_entity_decode($pokemon['species']),
      'moderation_state' => 'published',
    ]);

    $match = array();
    preg_match('/(\d+(\.\d+)?)m/', $pokemon['height'], $match);
    if (isset($match[1])) {
      $node->field_height = (float) $match[1];
    }

    $match = array();
    preg_match('/(\d+(\.\d+)?)\s*kg/', $pokemon['weight'], $match);
    if (isset($match[1])) {
      $node->field_weight = (float) $match[1];
    }

    foreach ($pokemon['type'] as $i => $type) {
      $node->field_type[$i] = $types[$type];
    }

    $node->save();
  }
}
